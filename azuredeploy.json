{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "The region to deploy the resources into. Only change if resources need to be deployed to a different location than the resource group."
            }
          },
          "vmName": {
            "type": "string",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "Specify the name of the VM meeting the Caltex naming standards."
            }
          },
          "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "Specify the size of the VM required."
            }
          },
          "avSetRequired": {
            "type": "string",
            "defaultValue": "No",
            "metadata": {
                "description": "Whether this server should belong to an Availability Set. Allowed values are Yes or No"
              },
              "allowedValues": [
                "Yes",
                "No"
            ]
          },
          "avSetCreateNew": {
            "type": "string",
            "defaultValue": "No",
            "metadata": {
                "description": "Whether a new AV Set should be created"
              },
              "allowedValues": [
                "Yes",
                "No"
            ]
          },
          "avSetName": {
            "defaultValue": "None",
            "type": "string",
            "metadata": {
                "description": "Specify the name of the Availability Set, if required. Specify None if not required"
            }
          },
          "vmOsDiskSize": {
            "defaultValue": 128,
            "type": "int",
            "metadata": {
                "description": "The size of the VM OS Disk in GB"
            }
          },
          "numDataDisks": {
            "defaultValue": 1,
            "type": "int",
            "metadata": {
                "description": "The number of data disks to attach"
            }
          },
          "sizeOfDataDisksInGB": {
            "defaultValue": 1024,
            "type": "int",
            "metadata": {
                "description": "The size of the data disks to attach in GB"
            }
          },
          "osDiskStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "The type of disk storage to use for OS Disk. Accepted values are Standard_LRS, StandardSSD_LRS or Premium_LRS"
              },
              "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ]
          },
          "dataDiskStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "The type of disk storage to use for all Data Disks. Accepted values are Standard_LRS, StandardSSD_LRS or Premium_LRS"
              },
              "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ]
          },
          "dataDiskCaching": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "The type of data disk caching to use. Accepted values are None, ReadOnly or ReadWrite"
              },
              "allowedValues": [
                "None",
                "ReadOnly",
                "ReadWrite"
            ]
          },
          "networkInterfaceType": {
            "type": "string",
            "defaultValue": "Private",
            "metadata": {
                "group": "Network Configuration",
                "description": "Whether this server should attach a Public IP to the primary NIC or only use a Private IP"
              },
              "allowedValues": [
                "Public",
                "Private"
            ]
          },
          "publicIpAllocationType": {
            "defaultValue": "Dynamic",
            "type": "string",
            "metadata": {
                "description": "Specify whether the public IP should be Static or Dynamic"
            },
            "allowedValues": [
                "Static",
                "Dynamic"
              ]
            },
            "publicIpSku": {
                "defaultValue": "Standard",
                "type": "string",
                "metadata": {
                    "description": "Specify the SKU of the public IP address"
                },
                "allowedValues": [
                    "Standard",
                    "Basic"
                ]
            },
            "privateIpAllocationType": {
                "defaultValue": "Static",
                "type": "string",
                "metadata": {
                    "description": "Specify whether the private IP should be Static or Dynamic"
                },
                "allowedValues": [
                    "Static",
                    "Dynamic"
                ]
            },
            "privateIpAddress": {
                "defaultValue": "None",
                "type": "string",
                "metadata": {
                    "description": "A static private IP address to be used"
                }
            },
            "enableAcceleratedNetworking": {
              "defaultValue": "false",
              "type": "string",
              "metadata": {
                  "description": "Specify whether the NIC should have Accelerated Networking enabled"
              },
              "allowedValues": [
                  "false",
                  "true"
              ]
            },
            "networkSecurityGroup": {
              "type": "string",
              "metadata": {
                  "description": "Name of an NSG to attach to the NIC"
              }
            },
            "joinLoadBalancer": {
              "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No",
            "type": "string",
            "metadata": {
                "description": "Whether the NIC should belong to a Load Balancer Backend Pool. Default is No."
            }
          },
          "loadBalancerName": {
              "type": "string",
              "metadata": {
                  "description": "Name of an Azure Load Balancer to attach to the NIC"
              }
          },
          "loadBalancerBackendPoolName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Backend Pool of the Load Balancer to join"
            }
          },
          "platform": {
              "allowedValues": [
                  "Windows",
                  "Linux"
              ],
              "type": "string",
              "metadata": {
                  "description": "Select the OS type to be provisioned"
              }
          },
          "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Specify the username of the Administrator account"
            }
        },
        "authenticationType": {
            "defaultValue": "Password",
            "allowedValues": [
                "Password",
                "SSH-Public-Key"
            ],
            "type": "string",
            "metadata": {
                "description": "Authentication type for the deployment"
            }
        },
        "adminPasswordOrKey": {
            "type": "SecureString",
            "metadata": {
                "description": "OS Admin password or SSH Key depending on value of authentication type"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "group": "Network Configuration",
                "description": "Name of the Virtual Network"
            }
        },
        "virtualNetworkRGName": {
            "type": "string",
            "metadata": {
                "group": "Network Configuration",
                "description": "Specify the name of the Resource Group where the vNet resides"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "group": "Network Configuration",
                "description": "Specify the name of the Subnet"
            }
        },
        "bootDiagnosticsStorage": {
          "type": "string",
          "metadata": {
            "group": "Infrastructure Configuration",
            "description": "Storage Account for storing boot diagnostics data"
          }
        },
        "backupRequired": {
          "type": "string",
          "defaultValue": "No",
          "metadata": {
              "description": "Whether this server should be added to a Recovery Services Vault for Azure backup"
            },
            "allowedValues": [
              "Yes",
              "No"
          ]
        },
        "vaultName": {
          "type": "string",
          "metadata": {
            "description": "The Recovery Services Vault to which this server should be joined"
          }
        },
        "vaultResourceGroup": {
          "type": "string",
          "metadata": {
            "description": "The Resource Group containing the Recovery Services Vault to which this server should be joined"
          }
        },
        "backupPolicyName": {
          "type": "string",
          "metadata": {
            "description": "The Backup Policy that should be applied to this server"
          }
        },
        "useDomainJoinExtension": {
            "type": "string",
            "defaultValue": "No",
            "metadata": {
                "description": "Whether this server should be domain joined"
              },
              "allowedValues": [
                "Yes",
                "No"
            ]
          },
          "domainToJoin": {
            "type": "string",
            "metadata": {
              "description": "The domain to which this server should be joined"
            }
          },
          "ouPath": {
            "type": "string",
            "metadata": {
              "description": "The Organisational Unit into which server should be placed in the chosen domain"
            }
          },
          "domainJoinAccount": {
            "type": "string",
            "metadata": {
              "description": "The domain account to use for joining the domain"
            }
          },
          "domainJoinAccountPassword": {
            "type": "string",
            "metadata": {
              "description": "The domain account password for domain join"
            }
          },
          "useDSCExtension": {
            "type": "string",
            "defaultValue": "Yes",
            "metadata": {
                "description": "Whether this server should use PowerShell DSC Extension"
              },
              "allowedValues": [
                "Yes",
                "No"
            ]
          },
          "dscExtensionUpdateTagVersion": {
            "type": "string",
            "metadata": {
              "description": "The current extension revision number. Increment by one with each update to ensure targets refresh their DSC settings"
            }
          },
          "dscFunction": {
            "type": "string",
            "metadata": {
                "description": "Calls function to execute within DSC configuration file"
            }
          },
          "_artifactsLocationSasToken": {
            "type": "string",
            "metadata": {
              "description": "SAS token for access to the DSC extension file"
            }
          },
          "_artifactsLocation": {
            "type": "string",
            "metadata": {
              "description": "URI of DSC artifacts required"
            }
          },
          "storageUserName": {
            "type": "string",
            "metadata": {
              "description": "The storage account where the DSC related tools downloads are saved for this environment"
            }
          },
          "storagePassword": {
            "type": "string",
            "metadata": {
              "description": "The access key for the storage account where the DSC related tools downloads are saved for this environment"
            }
          },
          "localAccountUserName": {
            "type": "string",
            "metadata": {
              "description": "Name of additional local user account to be added to local Administrators Group"
            }
          },
          "localAccountUserPassword": {
            "type": "securestring",
            "metadata": {
              "description": "Password of additional local user account to be added to local Administrators Group"
            }
          },
          "branch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
              "description": "Code branch for template testing. Remove for master merge"
            }
          },
          "tagCostCentre": {
            "type": "string",
            "metadata": {
                "group": "Tags",
                "description": "Tag - Cost Cnetre"
            }
          },
          "tagApplication": {
            "type": "string",
            "metadata": {
                "group": "Tags",
                "description": "Tag - Application"
            }
          },
          "tagITOwner": {
            "type": "string",
            "metadata": {
                "group": "Tags",
                "description": "Tag - IT Owner"
            }
          },
          "tagProvisionedBy": {
            "type": "string",
            "metadata": {
              "description": "Tag - Provisioned By"
            }
          },
          "tagProvisionDate": {
            "type": "string",
            "metadata": {
              "description": "Tag - Provision Date"
            }
          },
          "tagEnvironment": {
            "type": "string",
            "allowedValues": [
                "Production",
                "Development",
                "Test"
            ],
            "metadata": {
                "group": "Infrastructure Configuration",
                "description": "Specify the environment which best describes the deployment."
            }
        }
    },
    "variables": {
        "networkApiVersion": "2018-07-01",
        "computeApiVersion": "2018-04-01",
        "extensionApiVersion": "2015-06-15",
        "vaultApiVersion": "2016-06-01",
        "deploymentApiVersion": "2015-01-01",
        "templateLinkProd": "https://raw.githubusercontent.com/jvta/AzureVM/master",
        "templateLink": "[concat('https://raw.githubusercontent.com/jvta/AzureVM/',parameters('branch'))]",
        "nicName": "[concat(parameters('vmName'),'-nic1')]",
        "pipName": "[concat(parameters('vmName'),'-PIP')]",
        "emptyString": "",
        "emptyArray": [],
        "dependsOnPublicIp": [
          "Microsoft.Resources/deployments/ProvisionPublicIp"
        ],
        "tags": {
            "CostCentre": "[parameters('tagCostCentre')]",
            "Application": "[parameters('tagApplication')]",
            "ITOwner": "[parameters('tagITOwner')]",
            "provisionedBy": "[parameters('tagProvisionedBy')]",
            "provisionDate": "[parameters('tagProvisionDate')]",
            "Environment": "[parameters('tagEnvironment')]"
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('avSetCreateNew'),'Yes')]",
            "type":"Microsoft.Resources/deployments",
            "name":"provisionAvSet",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "dependsOn":[],
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri": "[concat(variables('templateLink'),'/','LinkedTemplates/provisionAVSet.json')]",
                    "contentVersion":"1.0.0.0"
                },
                "parameters":{
                    "location": {
                        "value": "[parameters('location')]"
                      },
                    "apiVersion":{
                        "value":"[variables('computeApiVersion')]"
                    },
                    "name":{
                        "value":"[parameters('avSetName')]"
                    },
                    "tags": {
                        "value": "[variables('tags')]"
                    }
                }
            }
        },
        {
            "condition": "[equals(parameters('networkInterfaceType'),'Public')]",
            "type":"Microsoft.Resources/deployments",
            "name":"provisionPublicIp",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "dependsOn":[],
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri": "[concat(variables('templateLink'),'/','LinkedTemplates/provisionPIP.json')]",
                    "contentVersion":"1.0.0.0"
                },
                "parameters":{
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "apiVersion":{
                        "value":"[variables('networkApiVersion')]"
                    },
                    "name":{
                        "value":"[variables('pipName')]"
                    },
                    "publicIpAllocationType":{
                        "value":"[parameters('publicIpAllocationType')]"
                    },
                    "sku": {
                        "value": "[parameters('publicIpSku')]"
                    },
                    "tags": {
                        "value": "[variables('tags')]"
                    }
                }
            }
        },
        {
            "name": "provisionNetworkInterface",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(variables('templateLink'),'/LinkedTemplates/','provisionNIC',parameters('networkInterfaceType'),'.json')]",
                "contentVersion": "1.0.0.0"
              },
              "parameters": {
                "location": {
                  "value": "[parameters('location')]"
                },
                "tags": {
                    "value":"[variables('tags')]"
                },
                "pipId": {
                    "value": "[if(equals(parameters('networkInterfaceType'),'Public'), reference('provisionPublicIp').outputs.resourceID.value, 'None')]"
                },
                "nicName": {
                  "value": "[variables('nicName')]"
                },
                "networkApiVersion": {
                    "value": "[variables('networkApiVersion')]"
                  },
                "virtualNetworkName": {
                  "value": "[parameters('virtualNetworkName')]"
                },
                "virtualNetworkRGName": {
                  "value": "[parameters('virtualNetworkRGName')]"
                },
                "subnetName": {
                  "value": "[parameters('subnetName')]"
                },
                "privateIpAddress": {
                    "value": "[parameters('privateIpAddress')]"
                },
                "privateIpAllocationType": {
                  "value": "[parameters('privateIpAllocationType')]"
                },
                "enableAcceleratedNetworking": {
                  "value": "[parameters('enableAcceleratedNetworking')]"
                },
                "networkSecurityGroup": {
                  "value": "[parameters('networkSecurityGroup')]"
                },
                "joinLoadBalancer": {
                  "value": "[parameters('joinLoadBalancer')]"
                },
                "loadBalancerName": {
                  "value": "[parameters('loadBalancerName')]"
                },
                "loadBalancerBackendPoolName": {
                  "value": "[parameters('loadBalancerBackendPoolName')]"
                }
              }
            }
          },
          {
            "name": "provisionCompute",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "Microsoft.Resources/deployments/ProvisionNetworkInterface"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templateLink'),'/LinkedTemplates/','provisionVM.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "tags": {
                        "value":"[variables('tags')]"
                    },
                    "nicName": {
                        "value": "[variables('nicName')]"
                    },
                    "computeApiVersion": {
                        "value": "[variables('computeApiVersion')]"
                    },
                    "extensionApiVersion": {
                        "value": "[variables('extensionApiVersion')]"
                    },
                    "vaultApiVersion": {
                      "value": "[variables('vaultApiVersion')]"
                  },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "avSetRequired": {
                      "value": "[parameters('avSetRequired')]"
                    },
                    "avSetName": {
                        "value": "[if(equals(parameters('avSetRequired'),'Yes'), parameters('avSetName'), variables('emptyString'))]"
                    },
                    "vmOsDiskSize": {
                        "value": "[parameters('vmOsDiskSize')]"
                    },
                    "numDataDisks": {
                        "value": "[parameters('numDataDisks')]"
                    },
                    "sizeOfDataDisksInGB": {
                        "value": "[parameters('sizeOfDataDisksInGB')]"
                    },
                    "osDiskStorageType": {
                        "value": "[parameters('osDiskStorageType')]"
                    },
                    "dataDiskStorageType": {
                        "value": "[parameters('dataDiskStorageType')]"
                    },
                    "dataDiskCaching": {
                        "value": "[parameters('dataDiskCaching')]"
                    },
                    "platform": {
                      "value": "[parameters('platform')]"
                    },
                    "authenticationType": {
                      "value": "[parameters('authenticationType')]"
                    },
                    "adminPasswordOrKey": {
                      "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "bootDiagnosticsStorage": {
                      "value": "[parameters('bootDiagnosticsStorage')]"
                    },
                    "backupRequired": {
                      "value": "[parameters('backupRequired')]"
                    },
                    "vaultName": {
                      "value": "[parameters('vaultName')]"
                    },
                    "vaultResourceGroup": {
                      "value": "[parameters('vaultResourceGroup')]"
                    },
                    "backupPolicyName": {
                      "value": "[parameters('backupPolicyName')]"
                    },
                    "useDomainJoinExtension": {
                      "value": "[parameters('useDomainJoinExtension')]"
                    },
                    "domainToJoin": {
                      "value": "[parameters('domainToJoin')]"
                    },
                    "ouPath": {
                      "value": "[parameters('ouPath')]"
                    },
                    "domainJoinAccount": {
                      "value": "[parameters('domainJoinAccount')]"
                    },
                    "domainJoinAccountPassword": {
                      "value": "[parameters('domainJoinAccountPassword')]"
                    },
                    "useDSCExtension": {
                      "value": "[parameters('useDSCExtension')]"
                    },
                    "dscExtensionUpdateTagVersion": {
                      "value": "[parameters('dscExtensionUpdateTagVersion')]"
                    },
                    "dscFunction": {
                      "value": "[parameters('dscFunction')]"
                    },
                    "_artifactsLocationSasToken": {
                      "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "_artifactsLocation": {
                      "value": "[parameters('_artifactsLocation')]"
                    },
                    "storageUserName": {
                      "value": "[parameters('storageUserName')]"
                    },
                    "storagePassword": {
                      "value": "[parameters('storagePassword')]"
                    },
                    "localAccountUserName": {
                      "value": "[parameters('localAccountUserName')]"
                    },
                    "localAccountUserPassword": {
                      "value": "[parameters('localAccountUserPassword')]"
                    }
              }
            }
        }
    ],
    "outputs": {}
}
